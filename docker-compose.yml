version: '2'

networks:
  default:
    driver: bridge
    ipam:
      driver: default

services:
  nginx:
    image: nginx:1.13
    container_name: stockmann_nginx
    ports:
      - '8888:80'
    volumes:
      - ./:/home/bitrix
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/upstream.conf:/etc/nginx/conf.d/upstream.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/var/log/nginx:/var/log/nginx
    depends_on:
      - php
    restart: always
    networks:
      default:
        aliases:
          - dev.local

  varnish:
    image: varnish:stable
    container_name: stockmann_varnish
    ports:
      - '88:80'
    volumes:
      - ./docker/varnish/default.vcl:/etc/varnish/default.vcl
    depends_on:
      - nginx
    restart: always
    networks:
      default:
        aliases:
          - dev.local
  php:
    build:
      context: ./docker/php71
      args:
        GELF_HOST: ${GELF_HOST}
        GELF_PORT: ${GELF_PORT}
    container_name: stockmann_php
    volumes:
      - ./:/home/bitrix
      - ./docker/php71/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php71/conf.d/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/php71/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./docker/php71/php-fpm.d/php-fpm.conf:/usr/local/etc/php-fpm.d/php-fpm.conf
      - ./docker/var/log/php:/var/log/php
      - ~/.ssh:/root/.ssh:rw
      - ~/.ssh:/home/.ssh:rw
    environment:
      XDEBUG_CONFIG: "remote_host=${HOST} remote_enable=1"
      PHP_IDE_CONFIG: "serverName=Docker"
    depends_on:
      - db
    restart: always

    networks:
      - default

  db:
    image: mysql:5.7
    container_name: stockmann_db
    ports:
        - '3307:3306'
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dev
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/var/data/mysql:/var/lib/mysql
      - ./docker/var/log/mysql:/var/log/mysql
    restart: always
    networks:
      - default

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: stockmann_phpmyadmin
    ports:
     - 8083:80
    environment:
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - db
    restart: always
    networks:
      - default

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    container_name: stockmann_elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - indices.breaker.request.limit=45%
    volumes:
      - ./docker/data/elasticsearch/data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9201

  logstash:
    image: logstash:7.6.1
    container_name: stockmann_logstash
    volumes:
      - ./docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./docker/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - 5000:5000
      - 9600:9600
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:7.6.1
    container_name: stockmann_kibana
    volumes:
      - ./docker/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    environment:
      SERVER_NAME: stockmann.ru
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  redis:
    container_name: stockmann_redis
    image: redis:3.0
    ports:
      - "63791:6379"
  mailhog:
    image: mailhog/mailhog
    ports:
     - 1025:1025 # smtp server
     - 8025:8025 # web ui


#  memcached:
#    image: memcached:1.5
#    container_name: memcached
#    volumes:
#      - ./docker/log/memcached:/var/log/memcached
#      - ./docker/data/memcached:/var/lib/memcached
#    ports:
#      - '0.0.0.0:11211:11211'
